import com.udea.reglas.model.Participant;
global com.udea.reglas.model.Rate rate;
dialect "mvel"

// Regla 1: Rechazar si la deuda existente excede el 50% del salario anual
rule "High Debt to Salary Ratio"
when
    Participant(existingDebt > (0.5 * annualSalary))
then
    rate.setLoanStatus("Rejected - High Debt to Salary Ratio");
    rate.setLoanRate(999);
end

// Regla 2: Ofrecer tarjeta de crédito premium para clientes con buen puntaje y antigüedad
rule "Premium Credit Card Offer"
when
    Participant(creditScore >= 700, yearsWithBank >= 5, hasSavingsAccount == true)
then
    rate.setLoanStatus("Rejected - High Debt to Salary Ratio");
    rate.setLoanRate(999);
end

// Regla 3: Ofrecer cuenta de ahorros a jóvenes sin cuenta actual
rule "Youth Savings Account Offer"
when
    Participant(age < 25, hasSavingsAccount == false)
then
    rate.setLoanStatus("Rejected - High Debt to Salary Ratio");
    rate.setLoanRate(999);
end

// Regla 4: Rechazar si el puntaje de crédito es menor a 500, independientemente de otros factores
rule "Reject Very Low Credit Score"
when
    Participant(creditScore < 500)
then
    rate.setLoanStatus("Rejected - Very Low Credit Score");
    rate.setLoanRate(999);
end

// Regla 5: Ofrecer portafolio de inversión a clientes con alto valor de inversiones
rule "Investment Portfolio Offer"
when
    Participant(investmentPortfolioValue > 50000)
then
    rate.setLoanStatus("Approved - Small Loan");
    rate.setLoanRate(8.5);
end

// Regla 6: Rechazar si los gastos mensuales superan el 70% del salario mensual
rule "High Monthly Expenses"
when
    Participant(monthlyExpenses > (0.7 * (annualSalary / 12)))
then
    rate.setLoanStatus("Rejected - High Monthly Expenses");
    rate.setLoanRate(999);
end

// Regla 7: Ofrecer préstamos pequeños a clientes con empleo parcial y buen historial
rule "Small Loan for Part-Time Employees"
when
    Participant(employmentType == "Part-time", creditScore >= 650, loanAmount <= 5000)
then
    rate.setLoanStatus("Approved - Small Loan");
    rate.setLoanRate(8.5);
end

// Regla 8: Ofrecer seguro de vida a clientes con deuda alta y sin cuenta de ahorros
rule "Life Insurance Offer"
when
    Participant(existingDebt > 50000, hasSavingsAccount == false)
then
    rate.setLoanStatus("Approved - Small Loan");
    rate.setLoanRate(8.5);
end

// Regla 9: Aprobar préstamos grandes solo a clientes con empleo de tiempo completo y buen puntaje
rule "Large Loan for Full-Time Employees"
when
    Participant(employmentType == "Full-time", creditScore >= 750, loanAmount > 20000)
then
    rate.setLoanStatus("Approved - Large Loan");
    rate.setLoanRate(5.5);
end

// Regla 10: Ofrecer educación financiera a clientes con puntaje de crédito bajo
rule "Financial Education Offer"
when
    Participant(creditScore < 600)
then
    rate.setLoanStatus("Approved - Small Loan");
    rate.setLoanRate(8.5);
end
